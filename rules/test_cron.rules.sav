import org.joda.time.DateTime

rule "Caldaia Timer"
when
  Item LightTimer received update or
  Time cron "0 5 0 * * ?"
then
  var int startHrInt = (LightStartHour.state as DecimalType).intValue
  var int durationHrInt = (LightDurationHour.state as DecimalType).intValue
  var DateTime startTmr = parse(now.getYear() + "-" + now.getMonthOfYear() + "-" + now.getDayOfMonth() + "T" + startHrInt + ":00")
  var DateTime stopTmr = parse(now.getYear() + "-" + now.getMonthOfYear() + "-" + now.getDayOfMonth() + "T" + startHrInt + ":00").plusHours(durationHrInt)
  var Timer lightOnTimer
  var Timer lightOffTimer
  var Timer poolOffTimer
  if(LightTimer.state == ON)
  {
    lightOnTimer = createTimer(startTmr) [| 
      sendCommand(SoulissRele1_1, ON)
      postUpdate(SoulissRele1_1, ON)
      Thread::sleep(10000)  //wait 10 seconds, 
      sendCommand(SoulissRele1_1, ON)
    ]
    poolOffTimer = createTimer(stopTmr) [| 
      sendCommand(SoulissRele1_1, OFF)
      postUpdate(SoulissRele1_1, OFF)
      Thread::sleep(10000)  //wait 10 seconds, 
      sendCommand(SoulissRele1_1, OFF)
    ]
  }
  if(LightTimer.state == OFF)
  {
    sendCommand(SoulissRele1_1, OFF)
    postUpdate(SoulissRele1_1, OFF)
    Thread::sleep(10000)  //wait 10 seconds,
    sendCommand(SoulissRele1_1, OFF)
    if(lightOnTimer != null)
    {
      lightOnTimer.cancel
      lightOnTimer = null
    }
    if(lightOffTimer != null)
    {
      lightOffTimer.cancel
      lightOffTimer = null
    }
  }
end 
